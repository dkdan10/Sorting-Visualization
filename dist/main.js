!function(t){var e={};function r(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)r.d(n,s,function(e){return t[e]}.bind(null,s));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);class n{constructor(t,e){this.$visEl=t,this.$buttonsDiv=e,this.renderQueue=[],this.config={arrayLength:10,sortMethod:0},this.sortingArray=[],this.resetSortingArray(),this.setupButtons(),this.renderQueueInterval=setInterval(()=>{this.checkRenderQueue()},200)}setupButtons(){const t=$("<input type='button' value='Start Merge Search'/>").click(t=>{t.preventDefault(),this.renderQueue.length||this.mergeSort("first",0)}),e=$("<input type='text' value='10'/>").change(t=>{const e=parseInt(t.target.value);e&&e<=100&&e>0?(this.config.arrayLength=e,this.resetSortingArray()):e>100?(this.config.arrayLength=100,t.target.value=100,this.resetSortingArray()):e<1&&(this.config.arrayLength=1,t.target.value=1,this.resetSortingArray())}),r=$("<input type='button' value='New Array'/>").click(t=>{t.preventDefault(),this.resetSortingArray()});this.$buttonsDiv.append(t),this.$buttonsDiv.append(e),this.$buttonsDiv.append(r)}mergeSort(t,e){if("first"===t&&(t=this.sortingArray),t.length<=1)return t;const r=Math.floor(t.length/2),n=t.slice(0,r),s=t.slice(r),i=this.merge(this.mergeSort(n,e),this.mergeSort(s,e+r),e);return this.sortingArray=this.sortingArray.slice(0,e).concat(i).concat(this.sortingArray.slice(e+i.length)),this.pushToRenderQueue(this.sortingArray),i}checkRenderQueue(){if(this.renderQueue.length){const t=this.renderQueue.shift();this.render(t.arrayState,t.extra.selectedIdxs)}}pushToRenderQueue(t,e={}){this.renderQueue.push({arrayState:t.slice(),extra:e})}merge(t,e,r){let n=[],s=0,i=0;for(;s<t.length&&i<e.length;){const o=this.sortingArray.slice(0,r).concat(n.concat(t.slice(s)).concat(e.slice(i))).concat(this.sortingArray.slice(r+e.length+t.length));this.pushToRenderQueue(o,{selectedIdxs:{[r+s]:!0,[r+i+t.length-s]:!0}}),t[s]<e[i]?(n.push(t[s]),s++):(n.push(e[i]),i++)}return n.concat(t.slice(s)).concat(e.slice(i))}render(t,e){this.$visEl.empty();const r=$("<ul>").addClass("visUl");for(let n=0;n<t.length;n++){const s=t[n],i=$("<li>").append(`<span>${s}</span>`).addClass("visLi").height(Math.floor(s/this.config.arrayLength*10)+"%");e&&e[n]&&i.addClass("selected"),r.append(i)}this.$visEl.append(r)}resetSortingArray(){this.sortingArray=[];for(let t=0;t<this.config.arrayLength;t++){const t=Math.floor(Math.random()*this.config.arrayLength*10)+1;this.sortingArray.push(t)}this.render(this.sortingArray)}}$(()=>{const t=$("#sorting-vis"),e=$("#buttons-div");new n(t,e)})}]);